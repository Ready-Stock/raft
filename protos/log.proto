syntax = "proto3";

package raft;

enum LogType {
    // Command is applied to a user FSM.
    Command = 0;

    // Noop is used to assert leadership.
    Noop = 1;

    // AddPeer is used to add a new peer. This should only be used with
    // older protocol versions designed to be compatible with unversioned
    // Raft servers. See comments in config.go for details.
    AddPeerDeprecated = 2;

    // RemovePeer is used to remove an existing peer. This should only be
    // used with older protocol versions designed to be compatible with
    // unversioned Raft servers. See comments in config.go for details.
    RemovePeerDeprecated = 3;

    // Barrier is used to ensure all preceding operations have been
    // applied to the FSM. It is similar to LogNoop, but instead of returning
    // once committed, it only returns once the FSM manager acks it. Otherwise
    // it is possible there are operations committed but not yet applied to
    // the FSM.
    Barrier = 4;

    // Configuration establishes a membership change configuration. It is
    // created when a server is added, removed, promoted, etc. Only used
    // when protocol version 1 or greater is in use.
    Configuration = 5;
}

message Log {
    // Index hold the index of the log entry.
    uint64 Index = 1;

    // Term holds the election term of the log entry.
    uint64 Term = 2;

    // Type holds the type of the log entry.
    LogType Type = 3;

    // Data holds the log entry's type-specific data.
    bytes Data = 4;
}