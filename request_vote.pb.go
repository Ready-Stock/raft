// Code generated by protoc-gen-go. DO NOT EDIT.
// source: request_vote.proto

package raft

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RequestVoteRequest struct {
	// Required field on all requests.
	Header *RPCHeader `protobuf:"bytes,1,opt,name=Header,proto3" json:"Header,omitempty"`
	// Provide the term and our id
	Term      uint64 `protobuf:"varint,2,opt,name=Term,proto3" json:"Term,omitempty"`
	Candidate []byte `protobuf:"bytes,3,opt,name=Candidate,proto3" json:"Candidate,omitempty"`
	// Used to ensure safety
	LastLogIndex         uint64   `protobuf:"varint,4,opt,name=LastLogIndex,proto3" json:"LastLogIndex,omitempty"`
	LastLogTerm          uint64   `protobuf:"varint,5,opt,name=LastLogTerm,proto3" json:"LastLogTerm,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestVoteRequest) Reset()         { *m = RequestVoteRequest{} }
func (m *RequestVoteRequest) String() string { return proto.CompactTextString(m) }
func (*RequestVoteRequest) ProtoMessage()    {}
func (*RequestVoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fbf1fb495c7f1887, []int{0}
}

func (m *RequestVoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestVoteRequest.Unmarshal(m, b)
}
func (m *RequestVoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestVoteRequest.Marshal(b, m, deterministic)
}
func (m *RequestVoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestVoteRequest.Merge(m, src)
}
func (m *RequestVoteRequest) XXX_Size() int {
	return xxx_messageInfo_RequestVoteRequest.Size(m)
}
func (m *RequestVoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestVoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RequestVoteRequest proto.InternalMessageInfo

func (m *RequestVoteRequest) GetHeader() *RPCHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RequestVoteRequest) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *RequestVoteRequest) GetCandidate() []byte {
	if m != nil {
		return m.Candidate
	}
	return nil
}

func (m *RequestVoteRequest) GetLastLogIndex() uint64 {
	if m != nil {
		return m.LastLogIndex
	}
	return 0
}

func (m *RequestVoteRequest) GetLastLogTerm() uint64 {
	if m != nil {
		return m.LastLogTerm
	}
	return 0
}

type RequestVoteResponse struct {
	// Required field on all requests.
	Header *RPCHeader `protobuf:"bytes,1,opt,name=Header,proto3" json:"Header,omitempty"`
	// Newer term if leader is out of date.
	Term uint64 `protobuf:"varint,2,opt,name=Term,proto3" json:"Term,omitempty"`
	// Peers is deprecated, but required by servers that only understand
	// protocol version 0. This is not populated in protocol version 2
	// and later.
	Peers []byte `protobuf:"bytes,3,opt,name=Peers,proto3" json:"Peers,omitempty"`
	// Is the vote granted.
	Granted              bool     `protobuf:"varint,4,opt,name=Granted,proto3" json:"Granted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestVoteResponse) Reset()         { *m = RequestVoteResponse{} }
func (m *RequestVoteResponse) String() string { return proto.CompactTextString(m) }
func (*RequestVoteResponse) ProtoMessage()    {}
func (*RequestVoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fbf1fb495c7f1887, []int{1}
}

func (m *RequestVoteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestVoteResponse.Unmarshal(m, b)
}
func (m *RequestVoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestVoteResponse.Marshal(b, m, deterministic)
}
func (m *RequestVoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestVoteResponse.Merge(m, src)
}
func (m *RequestVoteResponse) XXX_Size() int {
	return xxx_messageInfo_RequestVoteResponse.Size(m)
}
func (m *RequestVoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestVoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RequestVoteResponse proto.InternalMessageInfo

func (m *RequestVoteResponse) GetHeader() *RPCHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RequestVoteResponse) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *RequestVoteResponse) GetPeers() []byte {
	if m != nil {
		return m.Peers
	}
	return nil
}

func (m *RequestVoteResponse) GetGranted() bool {
	if m != nil {
		return m.Granted
	}
	return false
}

func init() {
	proto.RegisterType((*RequestVoteRequest)(nil), "raft.RequestVoteRequest")
	proto.RegisterType((*RequestVoteResponse)(nil), "raft.RequestVoteResponse")
}

func init() { proto.RegisterFile("request_vote.proto", fileDescriptor_fbf1fb495c7f1887) }

var fileDescriptor_fbf1fb495c7f1887 = []byte{
	// 226 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x90, 0xbd, 0x4a, 0x44, 0x31,
	0x10, 0x85, 0x89, 0x66, 0x57, 0x9d, 0x5d, 0x50, 0x46, 0x8b, 0x20, 0x16, 0xe1, 0x36, 0xde, 0xea,
	0x16, 0xfa, 0x08, 0x5b, 0xa8, 0xb0, 0xc5, 0x12, 0xc4, 0x76, 0x89, 0x66, 0xfc, 0x29, 0x4c, 0xae,
	0x93, 0x51, 0xac, 0x7d, 0x27, 0xdf, 0x4f, 0x4c, 0x22, 0xba, 0xb5, 0xdd, 0x9c, 0x2f, 0x67, 0xc2,
	0xc7, 0x00, 0x32, 0xbd, 0xbc, 0x52, 0x96, 0xf5, 0x5b, 0x12, 0x1a, 0x46, 0x4e, 0x92, 0x50, 0xb3,
	0xbf, 0x97, 0xe3, 0x03, 0x1e, 0xef, 0xd6, 0x8f, 0xe4, 0x03, 0x71, 0xe5, 0xdd, 0xa7, 0x02, 0x74,
	0xb5, 0x7e, 0x93, 0x84, 0xda, 0x88, 0xa7, 0x30, 0xbd, 0x2c, 0x35, 0xa3, 0xac, 0xea, 0x67, 0x67,
	0xfb, 0xc3, 0xf7, 0xfe, 0xe0, 0x56, 0x8b, 0x8a, 0x5d, 0x7b, 0x46, 0x04, 0x7d, 0x4d, 0xfc, 0x6c,
	0xb6, 0xac, 0xea, 0xb5, 0x2b, 0x33, 0x9e, 0xc0, 0xde, 0xc2, 0xc7, 0xf0, 0x14, 0xbc, 0x90, 0xd9,
	0xb6, 0xaa, 0x9f, 0xbb, 0x5f, 0x80, 0x1d, 0xcc, 0x97, 0x3e, 0xcb, 0x32, 0x3d, 0x5c, 0xc5, 0x40,
	0xef, 0x46, 0x97, 0xcd, 0x0d, 0x86, 0x16, 0x66, 0x2d, 0x97, 0xcf, 0x27, 0xa5, 0xf2, 0x17, 0x75,
	0x1f, 0x0a, 0x0e, 0x37, 0xbc, 0xf3, 0x98, 0x62, 0xa6, 0xff, 0x89, 0x1f, 0xc1, 0x64, 0x45, 0xc4,
	0xb9, 0x49, 0xd7, 0x80, 0x06, 0x76, 0x2e, 0xd8, 0x47, 0xa1, 0x50, 0x5c, 0x77, 0xdd, 0x4f, 0xbc,
	0x9d, 0x96, 0x1b, 0x9e, 0x7f, 0x05, 0x00, 0x00, 0xff, 0xff, 0x6d, 0x40, 0x4a, 0xd3, 0x71, 0x01,
	0x00, 0x00,
}
