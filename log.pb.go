// Code generated by protoc-gen-go. DO NOT EDIT.
// source: log.proto

package raft

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type LogType int32

const (
	// Command is applied to a user FSM.
	LogType_Command LogType = 0
	// Noop is used to assert leadership.
	LogType_Noop LogType = 1
	// AddPeer is used to add a new peer. This should only be used with
	// older protocol versions designed to be compatible with unversioned
	// Raft servers. See comments in config.go for details.
	LogType_AddPeerDeprecated LogType = 2
	// RemovePeer is used to remove an existing peer. This should only be
	// used with older protocol versions designed to be compatible with
	// unversioned Raft servers. See comments in config.go for details.
	LogType_RemovePeerDeprecated LogType = 3
	// Barrier is used to ensure all preceding operations have been
	// applied to the FSM. It is similar to LogNoop, but instead of returning
	// once committed, it only returns once the FSM manager acks it. Otherwise
	// it is possible there are operations committed but not yet applied to
	// the FSM.
	LogType_Barrier LogType = 4
	// Configuration establishes a membership change configuration. It is
	// created when a server is added, removed, promoted, etc. Only used
	// when protocol version 1 or greater is in use.
	LogType_Configuration LogType = 5
)

var LogType_name = map[int32]string{
	0: "Command",
	1: "Noop",
	2: "AddPeerDeprecated",
	3: "RemovePeerDeprecated",
	4: "Barrier",
	5: "Configuration",
}

var LogType_value = map[string]int32{
	"Command":              0,
	"Noop":                 1,
	"AddPeerDeprecated":    2,
	"RemovePeerDeprecated": 3,
	"Barrier":              4,
	"Configuration":        5,
}

func (x LogType) String() string {
	return proto.EnumName(LogType_name, int32(x))
}

func (LogType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{0}
}

type Log struct {
	// Index hold the index of the log entry.
	Index uint64 `protobuf:"varint,1,opt,name=Index,proto3" json:"Index,omitempty"`
	// Term holds the election term of the log entry.
	Term uint64 `protobuf:"varint,2,opt,name=Term,proto3" json:"Term,omitempty"`
	// Type holds the type of the log entry.
	Type LogType `protobuf:"varint,3,opt,name=Type,proto3,enum=raft.LogType" json:"Type,omitempty"`
	// Data holds the log entry's type-specific data.
	Data                 []byte   `protobuf:"bytes,4,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Log) Reset()         { *m = Log{} }
func (m *Log) String() string { return proto.CompactTextString(m) }
func (*Log) ProtoMessage()    {}
func (*Log) Descriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{0}
}

func (m *Log) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Log.Unmarshal(m, b)
}
func (m *Log) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Log.Marshal(b, m, deterministic)
}
func (m *Log) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Log.Merge(m, src)
}
func (m *Log) XXX_Size() int {
	return xxx_messageInfo_Log.Size(m)
}
func (m *Log) XXX_DiscardUnknown() {
	xxx_messageInfo_Log.DiscardUnknown(m)
}

var xxx_messageInfo_Log proto.InternalMessageInfo

func (m *Log) GetIndex() uint64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Log) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *Log) GetType() LogType {
	if m != nil {
		return m.Type
	}
	return LogType_Command
}

func (m *Log) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterEnum("raft.LogType", LogType_name, LogType_value)
	proto.RegisterType((*Log)(nil), "raft.Log")
}

func init() { proto.RegisterFile("log.proto", fileDescriptor_a153da538f858886) }

var fileDescriptor_a153da538f858886 = []byte{
	// 214 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x8f, 0xc1, 0x4a, 0xc4, 0x30,
	0x10, 0x86, 0xcd, 0x36, 0xeb, 0xea, 0xe8, 0x4a, 0x76, 0x58, 0x21, 0xc7, 0xea, 0xa9, 0x78, 0xe8,
	0x41, 0x9f, 0x40, 0x77, 0x2f, 0xc2, 0x22, 0x52, 0xfa, 0x02, 0xd1, 0x4c, 0x4b, 0xc1, 0x66, 0xe2,
	0x10, 0x45, 0xdf, 0x5e, 0x12, 0x3d, 0x79, 0xfb, 0xe7, 0xff, 0x66, 0x3e, 0x18, 0x38, 0x7d, 0xe3,
	0xb1, 0x8d, 0xc2, 0x89, 0x51, 0x8b, 0x1b, 0xd2, 0xf5, 0x00, 0xd5, 0x81, 0x47, 0xdc, 0xc2, 0xf2,
	0x31, 0x78, 0xfa, 0xb2, 0xaa, 0x56, 0x8d, 0xee, 0x7e, 0x07, 0x44, 0xd0, 0x3d, 0xc9, 0x6c, 0x17,
	0xa5, 0x2c, 0x19, 0xaf, 0x40, 0xf7, 0xdf, 0x91, 0x6c, 0x55, 0xab, 0xe6, 0xe2, 0x76, 0xdd, 0x66,
	0x4b, 0x7b, 0xe0, 0x31, 0x97, 0x5d, 0x41, 0xf9, 0x6c, 0xef, 0x92, 0xb3, 0xba, 0x56, 0xcd, 0x79,
	0x57, 0xf2, 0xcd, 0x3b, 0xac, 0xfe, 0x96, 0xf0, 0x0c, 0x56, 0x3b, 0x9e, 0x67, 0x17, 0xbc, 0x39,
	0xc2, 0x13, 0xd0, 0x4f, 0xcc, 0xd1, 0x28, 0xbc, 0x84, 0xcd, 0xbd, 0xf7, 0xcf, 0x44, 0xb2, 0xa7,
	0x28, 0xf4, 0xea, 0x12, 0x79, 0xb3, 0x40, 0x0b, 0xdb, 0x8e, 0x66, 0xfe, 0xa4, 0x7f, 0xa4, 0xca,
	0x9e, 0x07, 0x27, 0x32, 0x91, 0x18, 0x8d, 0x1b, 0x58, 0xef, 0x38, 0x0c, 0xd3, 0xf8, 0x21, 0x2e,
	0x4d, 0x1c, 0xcc, 0xf2, 0xe5, 0xb8, 0xfc, 0x79, 0xf7, 0x13, 0x00, 0x00, 0xff, 0xff, 0x3e, 0x01,
	0x50, 0x0a, 0xf4, 0x00, 0x00, 0x00,
}
